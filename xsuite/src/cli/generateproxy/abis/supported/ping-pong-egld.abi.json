{
    "buildInfo": {
        "rustc": {
            "version": "1.71.0-nightly",
            "commitHash": "a2b1646c597329d0a25efa3889b66650f65de1de",
            "commitDate": "2023-05-25",
            "channel": "Nightly",
            "short": "rustc 1.71.0-nightly (a2b1646c5 2023-05-25)"
        },
        "contractCrate": {
            "name": "ping-pong-egld",
            "version": "0.0.2"
        },
        "framework": {
            "name": "multiversx-sc",
            "version": "0.45.2"
        }
    },
    "docs": [
        "A contract that allows anyone to send a fixed sum, locks it for a while and then allows users to take it back.",
        "Sending funds to the contract is called \"ping\".",
        "Taking the same funds back is called \"pong\".",
        "",
        "Restrictions:",
        "- `ping` can be called only after the contract is activated. By default the contract is activated on deploy.",
        "- Users can only `ping` once, ever.",
        "- Only the set amount can be `ping`-ed, no more, no less.",
        "- The contract can optionally have a maximum cap. No more users can `ping` after the cap has been reached.",
        "- The `ping` endpoint optionally accepts",
        "- `pong` can only be called after the contract expired (a certain duration has passed since activation).",
        "- `pongAll` can be used to send to all users to `ping`-ed. If it runs low on gas, it will interrupt itself.",
        "It can be continued anytime."
    ],
    "name": "PingPong",
    "constructor": {
        "docs": [
            "Necessary configuration when deploying:",
            "`ping_amount` - the exact EGLD amounf that needs to be sent when `ping`-ing.",
            "`duration_in_seconds` - how much time (in seconds) until contract expires.",
            "`opt_activation_timestamp` - optionally specify the contract to only actvivate at a later date.",
            "`max_funds` - optional funding cap, no more funds than this can be added to the contract."
        ],
        "inputs": [
            {
                "name": "ping_amount",
                "type": "BigUint"
            },
            {
                "name": "duration_in_seconds",
                "type": "u64"
            },
            {
                "name": "opt_activation_timestamp",
                "type": "Option<u64>"
            },
            {
                "name": "max_funds",
                "type": "optional<BigUint>",
                "multi_arg": true
            }
        ],
        "outputs": []
    },
    "endpoints": [
        {
            "docs": [
                "User sends some EGLD to be locked in the contract for a period of time.",
                "Optional `_data` argument is ignored."
            ],
            "name": "ping",
            "mutability": "mutable",
            "payableInTokens": [
                "EGLD"
            ],
            "inputs": [
                {
                    "name": "_data",
                    "type": "ignore",
                    "multi_arg": true
                }
            ],
            "outputs": []
        },
        {
            "docs": [
                "User can take back funds from the contract.",
                "Can only be called after expiration."
            ],
            "name": "pong",
            "mutability": "mutable",
            "inputs": [],
            "outputs": []
        },
        {
            "docs": [
                "Send back funds to all users who pinged.",
                "Returns",
                "- `completed` if everything finished",
                "- `interrupted` if run out of gas midway.",
                "Can only be called after expiration."
            ],
            "name": "pongAll",
            "mutability": "mutable",
            "inputs": [],
            "outputs": [
                {
                    "type": "OperationCompletionStatus"
                }
            ]
        },
        {
            "docs": [
                "Lists the addresses of all users that have `ping`-ed,",
                "in the order they have `ping`-ed"
            ],
            "name": "getUserAddresses",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "variadic<Address>",
                    "multi_result": true
                }
            ]
        },
        {
            "name": "getPingAmount",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "BigUint"
                }
            ]
        },
        {
            "name": "getDeadline",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "u64"
                }
            ]
        },
        {
            "docs": [
                "Block timestamp of the block where the contract got activated.",
                "If not specified in the constructor it is the the deploy block timestamp."
            ],
            "name": "getActivationTimestamp",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "u64"
                }
            ]
        },
        {
            "docs": [
                "Optional funding cap."
            ],
            "name": "getMaxFunds",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "Option<BigUint>"
                }
            ]
        },
        {
            "docs": [
                "State of user funds.",
                "0 - user unknown, never `ping`-ed",
                "1 - `ping`-ed",
                "2 - `pong`-ed"
            ],
            "name": "getUserStatus",
            "mutability": "readonly",
            "inputs": [
                {
                    "name": "user_id",
                    "type": "u32"
                }
            ],
            "outputs": [
                {
                    "type": "UserStatus"
                }
            ]
        },
        {
            "docs": [
                "Part of the `pongAll` status, the last user to be processed.",
                "0 if never called `pongAll` or `pongAll` completed.."
            ],
            "name": "pongAllLastUser",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "u32"
                }
            ]
        }
    ],
    "esdtAttributes": [],
    "hasCallback": false,
    "types": {
        "OperationCompletionStatus": {
            "type": "explicit-enum",
            "variants": [
                {
                    "docs": [
                        "indicates that operation was completed"
                    ],
                    "name": "completed"
                },
                {
                    "docs": [
                        "indicates that operation was interrupted prematurely, due to low gas"
                    ],
                    "name": "interrupted"
                }
            ]
        },
        "UserStatus": {
            "type": "enum",
            "variants": [
                {
                    "name": "New",
                    "discriminant": 0
                },
                {
                    "name": "Registered",
                    "discriminant": 1
                },
                {
                    "name": "Withdrawn",
                    "discriminant": 2
                }
            ]
        }
    }
}
