name: Main

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - dev
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js & pnpm
        uses: ./.github/actions/node-pnpm

      - name: Lint
        run: pnpm lint

      - name: Use Golang
        uses: actions/setup-go@v5
        with:
          go-version: "1.20"
          cache-dependency-path: |
            xsuite-fullsimulnet/build-binary.mjs
            xsuite-lightsimulnet/src/go.sum

      - name: Build xsuite-fullsimulnet
        run: pnpm build-xsuite-fullsimulnet

      - name: Build xsuite-lightsimulnet
        run: pnpm build-xsuite-lightsimulnet

      - name: Build xsuite
        run: pnpm build-xsuite

      - name: Install Rust
        run: |
          pnpm xsuite install-rust
          echo "RUST_KEY=$(pnpm xsuite install-rust-key)" >> $GITHUB_ENV

      - name: Cache Rust
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/
            target/
          key: rust-${{ runner.os }}-${{ env.RUST_KEY }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: rust-${{ runner.os }}-

      - name: Test xsuite
        run: |
          git config --global user.email "you@example.com"
          git config --global user.name "Your Name"
          pnpm test-xsuite

      - name: Verify xsuite wasms
        run: pnpm verify-xsuite-wasms

      - name: Build contracts
        run: pnpm build-contracts

      - name: Typecheck contracts
        run: pnpm typecheck-contracts

      - name: Test contracts
        run: pnpm test-contracts
