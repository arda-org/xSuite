# GeneralSettings section of the proxy server
[GeneralSettings]
   # ServerPort is the port used for the web server. The frontend will connect to this port
   ServerPort = 8080

   # RequestTimeoutSec represents the maximum number of seconds a request can last until throwing an error
   RequestTimeoutSec = 80

   # HeartbeatCacheValidityDurationSec represents the maximum number of seconds the heartbeat cache data is valid before it
   # should be updated
   HeartbeatCacheValidityDurationSec = 25

   # ValStatsCacheValidityDurationSec represents the maximum number of seconds the validator statistics cache data is valid
   # before it should be updated
   ValStatsCacheValidityDurationSec = 60

   # EconomicsMetricsCacheValidityDurationSec represents the maximum number of seconds the economics metrics cache data is valid
   # before it should be updated
   EconomicsMetricsCacheValidityDurationSec = 600 # 10 minutes

   # BalancedObservers - if this flag is set to true, then the requests will be distributed equally between observers.
   # Otherwise, there are chances that only one observer from a shard will process the requests
   BalancedObservers = true

   # BalancedFullHistoryNodes - if this flag is set to true, then the requests will be distributed equally between full history nodes.
   # Otherwise, there are chances that only one full history node from a shard will process the requests
   BalancedFullHistoryNodes = true

   # FaucetValue represents the default value for a faucet transaction. If set to "0", the faucet feature will be disabled
   FaucetValue = "0"

   # RateLimitWindowsDurationSeconds represents the time window for limiting the number of requests to a given API endpoint
   # For example, if RateLimitDurationSeconds = 60 and the endpoint /address/:address/nonce is rate-limited to 5,
   # then after 5 requests in a 60 seconds window, a 'Too many requests' response will be returned. There is a clean-up
   # mechanism so after RateLimitDurationSeconds seconds, the restrictions will be reset.
   RateLimitWindowDurationSeconds = 60

   # AllowEntireTxPoolFetch represents the flag that enables the transactions pool API
   # With this flag disabled, /transaction/pool route will return an error
   AllowEntireTxPoolFetch = false

[AddressPubkeyConverter]
    #Length specifies the length in bytes of an address
    Length = 32

    # Type specifies the type of public keys: hex or bech32
    Type = "bech32"

[Marshalizer]
   Type = "gogo protobuf"

[Hasher]
   Type = "blake2b"

# ApiLogging holds settings related to api requests logging
[ApiLogging]
   # LoggingEnabled - if this flag is set to true, then if a requests exceeds a threshold or it is unsuccessful, then
   # a log will be printed
   LoggingEnabled = true

   # ThresholdInMicroSeconds represents the maximum duration to consider a request as normal. Above this, if the LoggingEnabled
   # flag is set to true, then a log will be printed
   ThresholdInMicroSeconds = 50000 # 50ms

# List of Observers. If you want to define a metachain observer (needed for validator statistics route) use
# shard id 4294967295
# Fallback observers which are only used when regular ones are offline should have IsFallback = true
[[Observers]]
   ShardId = 0
   Address = "http://127.0.0.1:8081"

[[Observers]]
   ShardId = 1
   Address = "http://127.0.0.1:8082"

[[Observers]]
   ShardId = 4294967295
   Address = "http://127.0.0.1:8083"
   IsFallback = false
